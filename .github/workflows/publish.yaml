name: Publish release

on:
  push:
    # Publish `v*` tags as releases.
    tags:
      - v[0-9]+.[0-9]+.[0-9]+           # Releases
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+  # Release Candidates

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-github-prerelease:
    runs-on: ubuntu-latest
    if: github.event_name == ’push’ && contains(github.ref_name, “rc”)
    permissions:
      contents: write

    steps:
      - name: Create release candidate
        id: create_release_candidate
        uses: softprops/action-gh-release@v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release Candidate ${{ github.ref_name }}
          draft: true           # So we can write release notes
          prelease: true
          generate_release_notes: true

  create-github-release:
    runs-on: ubuntu-latest
    if: github.event_name == ’push’ && !contains(github.ref_name, “rc”)
    permissions:
      contents: write

    steps:
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          draft: true           # So we can write candidate release notes
          prelease: false
          generate_release_notes: true

  build-and-publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
