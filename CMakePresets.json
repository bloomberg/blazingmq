{
    "version": 6,
    "configurePresets": [
        {
            "name": "base",
            "hidden": true,
            "description": "Base configuration for a build of BlazingMQ",
            "binaryDir": "cmake.bld",
            "cacheVariables": {
                "CMAKE_EXPORT_COMPILE_COMMANDS": "1",
                "CMAKE_BUILD_TYPE": "Debug",
                "BDE_BUILD_TARGET_SAFE": true,
                "CMAKE_CXX_STANDARD": "17",
                "BDE_BUILD_TARGET_CPP17": "17",
                "CMAKE_INSTALL_LIBDIR": "lib64"
            }
        },
        {
            "name": "macos-arm64-vcpkg",
            "description":
                "VCPKG based configuration for building on arm-based MacOS",
            "toolchainFile":
                "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
            "inherits": "base",
            "cacheVariables": {
                "VCPKG_INSTALL_OPTIONS": "--allow-unsupported",
                "FLEX_INCLUDE_DIR": "/opt/homebrew/opt/flex/include"
            }
        },
        {
            "name": "macos-x64-vcpkg",
            "description":
                "VCPKG based configuration for building on x86_64-based MacOS",
            "toolchainFile":
                "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
            "inherits": "base",
            "cacheVariables": {
                "VCPKG_INSTALL_OPTIONS": "--allow-unsupported",
                "FLEX_INCLUDE_DIR": "/usr/local/lib/opt/flex/include"
            }
        },
        {
            "name": "linux-x64-vcpkg",
            "description":
                "VCPKG based configuration for building on x86_64-based Linux",
            "toolchainFile":
                "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
            "inherits": "base"
        },
        {
            "name": "fuzz-tests",
            "description":
                "Configuration for building fuzztests on x86_64-based Linux",
            "binaryDir": "cmake.bld",
            "cacheVariables": {
                "DBDE_BUILD_TARGET_64": "1",
                "DBDE_BUILD_TARGET_CPP20": "1",
                "DBDE_BUILD_TARGET_SAFE": "1",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "1",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_INSTALL_LIBDIR": "lib64",
                "CMAKE_CXX_STANDARD": "20",
                "INSTALL_TARGETS": "fuzztests"
            }
        },
        {
            "name": "gh-base",
            "hidden": true,
            "description": "GitHub Actions CI: Base configuration",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/build/blazingmq",
            "cacheVariables": {
                "BDE_BUILD_TARGET_SAFE": "ON",
                "BDE_BUILD_TARGET_64": "ON",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_PREFIX_PATH":
                    "$env{GITHUB_WORKSPACE}/deps/srcs/bde-tools/BdeBuildSystem"
            }
        },
        {
            "name": "gh-build-ubuntu-latest-cpp17",
            "description": "GitHub Actions CI: Build on ubuntu-latest, C++17",
            "inherits": "gh-base",
            "toolchainFile":
                "$env{GITHUB_WORKSPACE}/deps/srcs/bde-tools/BdeBuildSystem/toolchains/linux/gcc-default.cmake",
            "environment": {
                "PKG_CONFIG_PATH":
                    "/usr/lib/x86_64-linux-gnu/pkgconfig:/opt/bb/lib64/pkgconfig"
            },
            "cacheVariables": {
                "BDE_BUILD_TARGET_CPP17": "ON",
                "CMAKE_INSTALL_LIBDIR": "lib64"
            }
        }
    ],
    "buildPresets": [
        {
            "name": "gh-build-ubuntu-latest-cpp17",
            "description": "GitHub Actions CI: Build on ubuntu-latest, C++17",
            "configurePreset": "gh-build-ubuntu-latest-cpp17",
            "jobs": 8,
            "targets": [
                "bmqbrkr",
                "bmqtool",
                "bmqstoragetool",
                "all.t",
                "all.it"
            ]
        }
    ],
    "testPresets": [
        {
            "name": "gh-build-ubuntu-latest-cpp17",
            "description":
                "GitHub Actions CI: Unit tests on ubuntu-latest, C++17",
            "configurePreset": "gh-build-ubuntu-latest-cpp17",
            "filter": {
                "include": {
                    "label": "^unit$"
                }
            },
            "output": {
                "outputOnFailure": true
            },
            "execution": {
                "noTestsAction": "error",
                "stopOnFailure": false
            }
        }
    ]
}
